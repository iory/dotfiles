#################
# tmux settings #
#################

# place status bar on top
set-option -g status-position top

# vi keybind
set-window-option -g mode-keys vi

# change prefix key: Ctrl-B --> Ctrl-x
# unbind-key C-b
# set-option -g prefix C-t
# bind C-t send-prefix
unbind C-b
set -g prefix C-Space
bind Space send-prefix
bind Space copy-mode
bind C-Space copy-mode

# set history limit like unlimited
set -g history-limit 999999999

# reload tmux settings
bind r source-file ~/.tmux.conf

#######################
# copy paste settings #
#######################

bind-key -T copy-mode-vi v send-keys -X begin-selection

# paste by Prefix+p
bind-key p paste-buffer
bind -T copy-mode-vi C-c send-keys -X cancel
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle

# Ctrl-a (Emacs Like)
bind -T copy-mode-vi C-a  send-keys -X start-of-line
bind -T copy-mode-vi C-e  send-keys -X end-of-line

bind-key q kill-window
bind-key C-q kill-window

# #################
# # pane settings #
# #################

set-option -g base-index 1
set-window-option -g pane-base-index 1

# Add escape sequence
# https://github.com/tmux/tmux/issues/1990#issuecomment-560477212
bind-key \\ split-window -h
bind-key - split-window -v

bind-key C-l next-window
bind-key C-h previous-window

bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5
bind-key -r s swap-pane -U

# move pane by Ctrl-o
bind-key -n C-o select-pane -t :.+

# # highlight the active window
setw -g window-status-activity-style bg='red','bright',fg='white'

# ##################
# # mouse settings #
# ##################

# enable the mouse operation
set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# ######################
# # tmux for powerline #
# ######################

set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "left"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-left "#(~/src/github.com/erikw/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/src/github.com/erikw/tmux-powerline/powerline.sh right)"

# clipboard sharing
if-shell "uname | grep -q Linux" ' \
    bind -T copy-mode-vi y     send -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"; \
    bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"; \
    bind -T copy-mode    MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"; \
    bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"; \
'

if-shell "uname | grep -q Darwin" ' \
    bind -T copy-mode-vi y     send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"; \
    bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"; \
    bind -T copy-mode    MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"; \
    bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"; \
'

if-shell "uname -a | grep -i Microsoft" ' \
    bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "win32yank -i"; \
    bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "win32yank -i"; \
    bind -T copy-mode    MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "win32yank -i"; \
    bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "win32yank -i"; \
    bind p run-shell "win32yank -o | xargs -0 -I{} tmux set-buffer -- {}; tmux paste-buffer"; \
'

bind h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

set-option -g status-left '#[fg=cyan,bg=#303030]#{?client_prefix,#[reverse],} #H[#S] #[default]'

if-shell "uname | grep -q Darwin" ' \
    set -g default-command "reattach-to-user-namespace -l ${SHELL}"; \
'
